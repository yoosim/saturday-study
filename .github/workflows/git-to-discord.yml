name: Git → Discord (general git card)

on:
  push:
    branches: [ main ]
    paths:
      - "study/**"            # 제출 폴더만 알림 (전체 알림 원하면 이 줄 삭제)
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches: [ main ]
    paths:
      - "study/**"

jobs:
  notify:
    # PR은 merge된 경우에만 카드 발송 (노이즈 감소)
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' &&
       github.event.action == 'closed' &&
       github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Post to Discord (git card)
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_GIT_URL }}   # ← 깃 알림 채널 웹훅 (오타 주의!)
        run: |
          python - <<'PY'
          import os, json, requests
          ev = os.environ.get("GITHUB_EVENT_NAME","")
          ref = os.environ.get("GITHUB_REF_NAME","")
          actor = os.environ.get("GITHUB_ACTOR","")
          pr_url = os.environ.get("GITHUB_EVENT_PULL_REQUEST_HTML_URL","")
          # github.* 컨텍스트는 env로 직접 안 들어오므로 아래 3줄로 최대한 포괄
          link = os.environ.get("GITHUB_SERVER_URL","") + "/" + os.environ.get("GITHUB_REPOSITORY","")
          # 우선순위: PR 링크 > compare 링크 > repo 링크
          compare = os.environ.get("GITHUB_EVENT_COMPARE","")
          if compare: link = compare
          if pr_url: link = pr_url
          content = f"📦 {ev} on `{ref}` by **{actor}**\n{link}"
          r = requests.post(os.environ["WEBHOOK"], json={"content": content}, timeout=20)
          print("status:", r.status_code, r.text[:200])
          r.raise_for_status()
          PY
