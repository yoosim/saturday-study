name: Notion Watcher

on:
  schedule:
    - cron: "*/10 * * * *"   # 10분마다 (UTC)
  workflow_dispatch: {}      # 수동 실행 버튼

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 1) 의존성 설치 (경로 주의!)
      - name: Install deps
        run: pip install -r AI_study_automation/requirements.txt

      # 2) (선택) 노션 연결 사전 점검 - 설정 이슈 빨리 찾기 좋음
      - name: Sanity check Notion connectivity
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_NOTION_URL }}
        run: |
          python - <<'PY'
          import os, requests
          k = os.environ.get("NOTION_API_KEY","")
          d = os.environ.get("NOTION_DATABASE_ID","")
          print("[ENV] key head:", k[:4], "len:", len(k))
          print("[ENV] dbid:", d, "len:", len(d))
          headers = {
              "Authorization": f"Bearer {k}",
              "Notion-Version": "2022-06-28",
              "Content-Type": "application/json"
          }
          r = requests.post(f"https://api.notion.com/v1/databases/{d}/query",
                            headers=headers, json={"page_size":1}, timeout=20)
          print("[NOTION] status:", r.status_code)
          print("[NOTION] body head:", r.text[:200])
          r.raise_for_status()
          PY

      # 3) 실제 워처 실행
      - name: Run watcher
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_NOTION_URL }}
        run: |
          python -m AI_study_automation.scripts.notion_watch
